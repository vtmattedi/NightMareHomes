# This File auto increase the version number of the app.

import datetime
import os

current_time = datetime.datetime.now()
 
# Print the current time
print('Updating version file: ', current_time.strftime("%Y-%m-%d %H:%M:%S"))
 
# Write the current time to the file
file_path = os.path.dirname(__file__)
file_path = os.path.join(file_path, 'Consts')
file_path = os.path.join(file_path, 'Version.js')


def gen_ver_file (version, dateTime):
    r= f"""// File generated by version.py

const currentVersion = '{version}';
const versionDate = '{dateTime}';"""
    r+= """

export { currentVersion, versionDate };
"""
    return r

# Create the file
if not os.path.exists(os.path.dirname(file_path)):
    os.makedirs(os.path.dirname(file_path))
version_number = '1.0.0'
if  os.path.isfile(file_path):
    # Get current File version
    with open(file_path, 'r+') as file:
        file_content = file.read()
        beging = file_content.find("currentVersion = '")+len("currentVersion = '")
        end = file_content.find("'", beging)
        version_number = file_content[beging:end]
        print(f"Current version: {version_number}")
        # Update the version number
        try :
            version_number = version_number.split('.')
            version_number[-1] = str(int(version_number[-1])+1)
            version_number = '.'.join(version_number)
        except:
            # If the version number is not in the correct format, set it to 1.0.0
            version_number = '1.0.0'
        print(f"New version: {version_number}")
    os.remove(file_path)


with open(file_path, 'w+') as file:
    # Get the current time
    current_time = datetime.datetime.now()
    current_time = current_time.strftime("%Y-%m-%d %H:%M:%S")
    
    # Print the current time
    
    # Write the current time to the file
    file.write(gen_ver_file(version_number, current_time))